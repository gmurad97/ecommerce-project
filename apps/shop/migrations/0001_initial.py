# Generated by Django 5.1.6 on 2025-03-04 01:02

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Brand name.', max_length=255, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly unique identifier.', max_length=255, unique=True, verbose_name='Slug')),
                ('logo', models.ImageField(blank=True, help_text='Brand logo image. Accepted formats: JPG, JPEG, PNG, SVG, GIF, WEBP, BMP, TIFF.', null=True, upload_to='brands/logo/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'svg', 'gif', 'webp', 'bmp', 'tiff'])], verbose_name='Logo')),
                ('status', models.BooleanField(default=True, help_text='Brand visibility status.', verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time of record creation (automatically).', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time of the last update (automatically).', verbose_name='Updated At')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time of soft deletion (automatically).', null=True, verbose_name='Deleted At')),
            ],
            options={
                'verbose_name': 'Brand',
                'verbose_name_plural': 'Brands',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name.', max_length=255, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly unique identifier.', max_length=255, unique=True, verbose_name='Slug')),
                ('image', models.ImageField(blank=True, help_text='Category logo image. Accepted formats: JPG, JPEG, PNG, SVG, GIF, WEBP, BMP, TIFF.', null=True, upload_to='category/image/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'svg', 'gif', 'webp', 'bmp', 'tiff'])], verbose_name='Image')),
                ('status', models.BooleanField(default=True, help_text='Category visibility status.', verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time of record creation (automatically).', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time of the last update (automatically).', verbose_name='Updated At')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time of soft deletion (automatically).', null=True, verbose_name='Deleted At')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_mode', models.BooleanField(default=False, help_text='Turns on/off maintenance mode.', verbose_name='Maintenance Mode')),
                ('snow_mode', models.BooleanField(default=False, help_text='Turns on/off snow effect.', verbose_name='Snow Mode')),
                ('email', models.EmailField(blank=True, help_text='Contact email address.', max_length=255, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, help_text='Contact phone number.', max_length=24, null=True, verbose_name='Phone')),
                ('address', models.CharField(blank=True, help_text='Business address.', max_length=255, null=True, verbose_name='Address')),
                ('working_time', models.TextField(blank=True, help_text='Business working hours.', null=True, verbose_name='Working Time')),
                ('facebook', models.URLField(blank=True, help_text='Link to the Facebook page.', null=True, verbose_name='Facebook')),
                ('instagram', models.URLField(blank=True, help_text='Link to the Instagram page.', null=True, verbose_name='Instagram')),
                ('linkedin', models.URLField(blank=True, help_text='Link to the LinkedIn profile.', null=True, verbose_name='LinkedIn')),
                ('twitter', models.URLField(blank=True, help_text='Link to the Twitter profile.', null=True, verbose_name='Twitter')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time of record creation (automatically).', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time of the last update (automatically).', verbose_name='Updated At')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time of soft deletion (automatically).', null=True, verbose_name='Deleted At')),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Product name.', max_length=255, verbose_name='Name')),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly unique identifier.', max_length=255, unique=True, verbose_name='Slug')),
                ('description', models.TextField(help_text='Detailed product description.', verbose_name='Description')),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='The number of items available in stock.', validators=[django.core.validators.MinValueValidator(0)], verbose_name='Stock quantity')),
                ('sku', models.CharField(blank=True, help_text='Unique SKU identifier for the product.', max_length=255, null=True, unique=True)),
                ('rating', models.IntegerField(choices=[(1, '1 star'), (2, '2 stars'), (3, '3 stars'), (4, '4 stars'), (5, '5 stars')], default=1, help_text='The product rating from 1 to 5 stars.', verbose_name='Rating')),
                ('price', models.DecimalField(decimal_places=2, help_text='The price of the product.', max_digits=12, verbose_name='Price')),
                ('discount', models.DecimalField(decimal_places=2, default=0, help_text='The discount percentage (0.00 to 100.00).', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount')),
                ('image', models.ImageField(blank=True, help_text='Product image. Accepted formats: JPG, JPEG, PNG, SVG, GIF, WEBP, BMP, TIFF.', null=True, upload_to='products/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'svg', 'gif', 'webp', 'bmp', 'tiff'])], verbose_name='Image')),
                ('status', models.BooleanField(default=True, help_text='Product visibility status.', verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time of record creation (automatically).', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time of the last update (automatically).', verbose_name='Updated At')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time of soft deletion (automatically).', null=True, verbose_name='Deleted At')),
                ('brand', models.ForeignKey(help_text='The brand this product belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='shop.brand', verbose_name='Brand')),
                ('category', models.ForeignKey(help_text='The category this product belongs to.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='shop.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ('-created_at',),
            },
        ),
    ]
